version: 2

jobs:

  test:
    docker:
      - image: rust:1.26
    steps:
      - checkout
      # Load cargo target from cache if possible.
      # Multiple caches are used to increase the chance of a cache hit.
      - restore_cache:
          keys:
            - v4-cargo-cache-{{ checksum "Cargo.lock" }}
            - v4-cargo-cache-{{ .Branch }}
            - v4-cargo-cache
      - run: cargo install -f tarpaulin
      - run: cargo build && cargo test
      - run: cargo tarpaulin --coveralls "${CIRCLE_SHA1}-${CIRCLE_BUILD_NUM}" --ciserver circle-ci
      - save_cache:
          key: v4-cargo-cache-{{ checksum "Cargo.lock" }}
          paths:
            - target
            - /usr/local/cargo
      - save_cache:
          key: v4-cargo-cache-{{ .Branch }}
          paths:
            - target
            - /usr/local/cargo
      - save_cache:
          key: v4-cargo-cache
          paths:
            - target
            - /usr/local/cargo
  audit:
    docker:
      - image: rust:1.23
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-cargo-audit-cache
      - run: cargo install --force cargo-audit && cargo audit
      - save_cache:
          key: v1-cargo-audit-cache
          paths:
            - /usr/local/cargo

workflows:
  version: 2

  # Build on push
  on_push:
    jobs:
      - test
      - audit

  # Build master every week on Monday at 04:00 am
  weekly:
    triggers:
      - schedule:
          cron: "0 4 * * 1"
          filters:
            branches:
              only:
                - master
    jobs:
      - test
      - audit
